#!/usr/bin/env python
#   This file is part of nexdatas - Tango Server for NeXus data writer
#
#    Copyright (C) 2014-2015 DESY, Jan Kotanski <jkotan@mail.desy.de>
#
#    nexdatas is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    nexdatas is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with nexdatas.  If not, see <http://www.gnu.org/licenses/>.
## \package nxselector nexdatas
## \file nxsscan
# GUI for setting sardana scans with NeXus Recorder

""" NXS Scan - GUI for setting sardana scans with NeXus Recorder"""

import logging
import sys
import os
from optparse import OptionParser
import nxstaurusgui
from  nxstaurusgui import serverinfo


logger = logging.getLogger(__name__)


## the main function
def remove_option(sopt, lopt):
    pos = None
    single = True
    for i, ar in enumerate(sys.argv):
        if ar.startswith(sopt):
            pos = i
            if ar == sopt:
                single = False
            break;    
        elif ar.startswith(lopt+'='):
            pos = i
            break;
    if pos is not None:
        if not single and len(sys.argv)  > pos:
            w = sys.argv.pop(pos + 1 )
            print "removed2", w
        w = sys.argv.pop(pos)
        print "removed", w
    print "sopt", sopt, lopt, pos    
    print sys.argv    

def main():


    import taurus.core.util.argparse
    parser = taurus.core.util.argparse.get_taurus_parser()
    
    parser.add_option(
        "-s", "--server", dest="server",
        help="selector server")
    parser.add_option(
        "-d", "--door", dest="door",
        help="door device name")
    parser.add_option(
        "-m", "--macroserver", dest="macroserver",
        help="macroserver device name")




    (options, _) = parser.parse_args()
    
    if options.macroserver:
        serverinfo.MACROSERVER_NAME = options.macroserver
        remove_option("-m", "--macroserver")
    if options.door:
        serverinfo.DOOR_NAME = options.door
        remove_option("-d", "--door")
    if options.server:
        serverinfo.SELECTORSERVER_NAME = options.server
        remove_option("-s", "--server")
        


    import sys
    sys.argv.insert(1, 'nxstaurusgui')
    
    from taurus.qt.qtgui.taurusgui.taurusgui import main as tmain
    
    tmain()


if __name__ == "__main__":
    main()



